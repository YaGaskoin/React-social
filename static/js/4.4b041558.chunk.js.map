{"version":3,"sources":["hoc/AuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/UsersColumnItem/UsersColumnItem.module.css","components/Dialogs/UsersColumnItem/UsersColumnItem.js","components/Dialogs/DialogItem/DialogItem.js","components/Dialogs/Dialogs.js","components/Dialogs/DialogsContainer.js"],"names":["withAuthRedirect","Component","this","props","isAuth","to","React","module","exports","UsersColumnItem","className","css","users_column__item","activeClassName","active","id","name","DialogItem","dialogs_items__message","text","maxLength50","maxLength","ReduxDialogForm","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","validate","requiredField","Dialogs","usersComponents","messagesPage","usersData","map","user","key","usersMessages","message","dialogs","users_column","dialog_items","formData","addMessage","messageText","compose","connect","state","auth","dispatch","updateMessageBody","body","changeMessageActionCreator","addMessageActionCreator"],"mappings":"sNAGaA,EAAmB,SAACC,GAO7B,OAP2C,uKAGnC,OAAIC,KAAKC,MAAMC,OACR,kBAACH,EAAcC,KAAKC,OADG,kBAAC,IAAD,CAAUE,GAAI,eAHT,GACXC,IAAML,a,oBCH1CM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,sBAAwB,yC,oBCA7ED,EAAOC,QAAU,CAAC,mBAAqB,4CAA4C,OAAS,kC,iHCW7EC,EAPS,SAACN,GACrB,OACI,yBAAKO,UAAWC,IAAIC,oBAChB,kBAAC,IAAD,CAASC,gBAAiBF,IAAIG,OAAQT,GAAI,YAAcF,EAAMY,IAAKZ,EAAMa,KAAzE,OCGGC,EARG,SAACd,GACf,OACI,yBAAKO,UAAWC,IAAIO,wBACff,EAAMgB,O,iCCGbC,EAAcC,YAAU,IAUxBC,EAAkBC,YAAU,CAC9BC,KAAM,iBADcD,EARL,SAACpB,GAChB,OACC,0BAAMsB,SAAUtB,EAAMuB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUb,KAAM,cAAec,YAAa,oGAAqBC,SAAU,CAACC,IAAeZ,KACtG,8FAwCDa,EAhCC,SAAC9B,GAGb,IAKI+B,EAAkB/B,EAAMgC,aAAaC,UAAUC,KAAI,SAACC,GACpD,OACI,kBAAC,EAAD,CAAiBC,IAAKD,EAAKvB,GAAIC,KAAMsB,EAAKtB,KAAMD,GAAIuB,EAAKvB,QAI7DyB,EAAgBrC,EAAMgC,aAAaK,cAAcH,KAAI,SAACI,GACtD,OACI,kBAAC,EAAD,CAAYF,IAAKE,EAAQ1B,GAAII,KAAMsB,EAAQtB,UAGnD,OACI,yBAAKT,UAAWC,IAAI+B,SAChB,yBAAKhC,UAAWC,IAAIgC,cACfT,GAEL,yBAAKxB,UAAWC,IAAIiC,cACfJ,GAEL,kBAAClB,EAAD,CAAiBG,SAxBN,SAACoB,GAChB1C,EAAM2C,WAAWD,EAASE,kB,wBCCnBC,sBAASC,aAjBF,SAACC,GACnB,MAAO,CACHf,aAAce,EAAMf,aACpB/B,OAAQ8C,EAAMC,KAAK/C,WAIF,SAACgD,GACtB,MAAO,CACHC,kBAAmB,SAACC,GAAWF,EAASG,YAA2BD,KACnER,WAAY,SAAC3B,GAAUiC,EAASI,YAAwBrC,SAOMnB,IAAvDgD,CAAyEf","file":"static/js/4.4b041558.chunk.js","sourcesContent":["import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component{\n        render () {\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }\n    }\n    return RedirectComponent\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog_items__message\":\"Dialogs_dialog_items__message__3O79k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_column__item\":\"UsersColumnItem_users_column__item__3cKb1\",\"active\":\"UsersColumnItem_active__1VKxx\"};","import css from \"./UsersColumnItem.module.css\";\nimport React from \"react\";\nimport {NavLink} from \"react-router-dom\";\n\n\nconst UsersColumnItem = (props) => {\n    return(\n        <div className={css.users_column__item}>\n            <NavLink activeClassName={css.active} to={'/dialogs/' + props.id}>{props.name} </NavLink>\n            </div>\n    )\n}\nexport default UsersColumnItem","import css from \"../Dialogs.module.css\";\nimport React from \"react\";\n\nconst DialogItem =(props) => {\n    return (\n        <div className={css.dialogs_items__message}>\n            {props.text}\n            </div>\n    )\n}\n\nexport default DialogItem","import React from \"react\";\nimport css from './Dialogs.module.css'\nimport UsersColumnItem from \"./UsersColumnItem/UsersColumnItem\";\nimport DialogItem from './DialogItem/DialogItem'\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLength, requiredField} from \"../../utils/validators/validators\";\n\n\nconst maxLength50 = maxLength(50);\n\nconst DialogForm = (props) => {\n    return(\n     <form onSubmit={props.handleSubmit}>\n         <Field component={Textarea} name={'messageText'} placeholder={'Введите сообщение'} validate={[requiredField, maxLength50]}/>\n                <button>Отправить</button>\n            </form>)\n}\n\nconst ReduxDialogForm = reduxForm({\n    form: 'dialogMessage'\n})(DialogForm);\n\nconst Dialogs = (props) => {\n\n\n    const addMessage = (formData) => {\n        props.addMessage(formData.messageText);\n\n    }\n\n    let usersComponents = props.messagesPage.usersData.map((user) => {\n        return (\n            <UsersColumnItem key={user.id} name={user.name} id={user.id}/>\n        )\n    })\n\n    let usersMessages = props.messagesPage.usersMessages.map((message) => {\n        return(\n            <DialogItem key={message.id} text={message.text}/>\n        )\n    })\n    return (\n        <div className={css.dialogs}>\n            <div className={css.users_column}>\n                {usersComponents}\n            </div>\n            <div className={css.dialog_items}>\n                {usersMessages}\n            </div>\n            <ReduxDialogForm onSubmit={addMessage}/>\n        </div>\n    )\n}\n\nexport default Dialogs","import {\n    addMessageActionCreator,\n    changeMessageActionCreator\n} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport React from \"react\";\nimport {withAuthRedirect} from \"../../hoc/AuthRedirect\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        messagesPage: state.messagesPage,\n        isAuth: state.auth.isAuth,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateMessageBody: (body) => { dispatch(changeMessageActionCreator(body))},\n        addMessage: (text) => {dispatch(addMessageActionCreator(text))}\n    }\n}\n\n\n\n\nexport default compose( connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}